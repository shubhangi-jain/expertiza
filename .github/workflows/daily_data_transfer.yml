name: Automatic data transfer

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # run daily at midnight

jobs:
  backup_copy_restore_and_log:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        #trying to login to the production remote server 
      - name: ssh on production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SOURCE_HOST }} #ip address of production
          username: ${{ secrets.SOURCE_USER }} #expertiza 
          key: ${{ secrets.SOURCE_KEY }} #private key
          script : |
            sudo mysqldump -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" ${{ secrets.SYNC_MYSQL_SOURCE_DB }} > production_db_dump.sql
            mkdir -p db_backups
            cp production_db_dump.sql db_backups/db_dump_production_$(date -d "today" +"%Y%m%d%H%M").sql
            echo "backup copied to db_backup">> log_file.txt
            
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.4.2
        with:
          ssh-private-key: |
            ${{ secrets.SOURCE_KEY }}
            ${{ secrets.TARGET_KEY }}
          script: |
            sudo scp ${{ secrets.SOURCE_USER }}@${{ secrets.SOURCE_HOST }}:${{ secrets.SYNC_SOURCE_BACKUP_LOCATION }}/production_db_dump.sql ${{ secrets.SOURCE_USER }}@${{ secrets.TARGET_HOST }}:${{ secrets.SYNC_DESTINATION_BACKUP_LOCATION }}
            echo Transfer file to Test serverâ€œ>> log_file.txt
            cp ${{ secrets.SYNC_DESTINATION_BACKUP_LOCATION }}/production_db_dump.sql ${{ secrets.SYNC_DESTINATION_BACKUP_LOCATION }}/db_dump_test_$(date -d "today" +"%Y%m%d%H%M").sql
            echo "remote copy created for logging on ${{ secrets.SYNC_DESTINATION_BACKUP_LOCATION }}">> log_file.txt
            
	          
            
