name: Automatic data transfer

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # run daily at midnight

jobs:
  backup_copy_restore_and_log:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        #trying to login to the production remote server 
      - name: create dump on production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SOURCE_HOST }} #ip address of production
          username: ${{ secrets.SOURCE_USER }} #expertiza 
          key: ${{ secrets.SOURCE_KEY }} #private key
          script : |
            mkdir -p prod_dump
            sudo mysqldump -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" ${{ secrets.SYNC_MYSQL_SOURCE_DB }} > prod_dump/production_db_dump.sql
            mkdir -p db_backups
            cp prod_dump/production_db_dump.sql db_backups/db_dump_production_$(date -d "today" +"%Y%m%d%H%M").sql
            echo "backup copied to db_backup">> log_file.txt
       
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Source dump artifact
          path: /home/${{ secrets.SOURCE_USER }}/prod_dump/

            
            
#       - name: Transfer files between source and target servers
#         uses: srt32/scp-action@v2.1
#         with:
# #           source: './local-file.txt'
# #           target: '/remote/directory'
#           ssh_private_key: ${{ secrets.SOURCE_KEY }}
#           ssh_private_key_2: ${{ secrets.TARGET_KEY }}
#           hosts: |
#             ${{ secrets.SOURCE_USER }}@${{ secrets.SOURCE_HOST }}
#             ${{ secrets.SOURCE_USER }}@${{ secrets.TARGET_HOST }}
#           script : |
#             mkdir -p /home/sjain29/test_db_backups
#             scp ${{ secrets.SOURCE_USER }}@${{ secrets.SOURCE_HOST }}:/production_db_dump.sql ${{ secrets.SOURCE_USER }}@${{ secrets.TARGET_HOST }}:/test_db_backups
#             echo "Transfer file to Test server“>> log_file.txt
          

#       - name: copy dump to test server
#         uses: appleboy/ssh-action@master
#         env:
#           SOURCE_KEY: ${{ secrets.SOURCE_KEY }}
#         with:
#           host: ${{ secrets.TARGET_HOST }} #ip address of production
#           username: ${{ secrets.SOURCE_USER }} #expertiza 
#           key: ${{ secrets.TARGET_KEY }} #private key
#           passphrase: ""
#           envs: SOURCE_KEY
#           script_stop: true
#           script : |
#             mkdir -p /home/sjain29/test_db_backups
#             touch /tmp/source_key_file.txt
#             echo "$SOURCE_KEY" > /tmp/source_key_file
#             scp -i /tmp/source_key_file ${{ secrets.SOURCE_USER }}@${{ secrets.SOURCE_HOST }}:/home/sjain29/production_db_dump.sql /home/sjain29/test_db_backups
#             echo "remote copy created for logging on test_db_backups">>/home/sjain29/log_file.txt
            
#       - name: Set up SSH keys
#         uses: webfactory/ssh-agent@v0.7.0
#         with:
#           ssh-private-key: |
#             ${{ secrets.SOURCE_KEY }}
#             ${{ secrets.TARGET_KEY }}
#           run: |
          
          
        
          
#       - name: ssh on production server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.TARGET_HOST }} #ip address of production
#           username: ${{ secrets.SOURCE_USER }} #expertiza 
#           key: ${{ secrets.TARGET_KEY }} #private key
#           script : |
#             mkdir -p test_db_backups
#             scp ${{ secrets.SOURCE_USER }}@${{ secrets.SOURCE_HOST }}:/production_db_dump.sql ${{ secrets.SOURCE_USER }}@${{ secrets.TARGET_HOST }}:/test_db_backups
#             echo "Transfer file to Test server“>> log_file.txt
#             cp test_db_backups/production_db_dump.sql test_db_backups/db_dump_test_$(date -d "today" +"%Y%m%d%H%M").sql
#             echo "remote copy created for logging on test_db_backups">> log_file.txt
            
      
